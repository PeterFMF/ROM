# 1. Naloga # preberemo podatke iz kolokvija.csvpodatki = dlmread('kolokviji.csv', ',')# izraèun vsote po vrsticah (2)vsota = sum(podatki, 2)# izraèun povpreèja po vrsticah (2)povprecje = mean(podatki, 2)# klic funkcije, kateri se rezultat vnese v oceneocene = izracunaj_oceno(povprecje)# zaporedje, katero prešteje število ocen (po stolpcu -> ')zaporedje = (1:length(ocene))'# z spremenljivko zapordje po vrstici prikažemo rezultate kolokvijevrezultat = [zaporedje, podatki, vsota, povprecje, ocene]# program zapiše spremeljivko rezultat v rezlutati.csv vsak element porazdeli po vejicidlmwrite('rezultati.csv', rezultat, ',')# program prikaže tipe spremenljivkdisp('Tip rezultata')class(rezultat)disp('Tipi stolpcev')class(podatki)class(vsota)class(povprecje)class(zaporedje)class(ocene)# izvajanje je enako, le da pri spremenljivki povprecje, vrednosti zaokrožipovprecje = round(mean(podatki, 2))ocene = izracunaj_oceno(povprecje)rezultat = [zaporedje, podatki, vsota, povprecje, ocene]# program zapiše v nov dokumentdlmwrite('rezultati_celi.csv', rezultat, ',')# 2. Naloga # program prikaže histogram ocen (grafièni prikaz)hist(ocene);# program poklièe in inštalira knjižnicepkg install -forge iopkg install -forge statisticspkg load statistics% alternativa 1frekvence = tabulate(ocene)% alternativa 2izracunaj = @(n) length(ocene(ocene==n))arrayfun(izracunaj, 6:10)  % 'map' za matlab% alternativa 3frekvence = zeros(1, 5)for n = 6:10  frekvence(n-5) = length(ocene(ocene==n))endclass(frekvence)bar(6:10, frekvence(6:10, 3))# grafièi prikazslika = figure()bar(6:10, frekvence(6:10, 3), 'facecolor', 'r', 'edgecolor', 'b')title('Porazdelitev ocen kolokvija')xlabel ("Ocene");ylabel ("Stevilo studentov");text (10, 10, "Bravo!");print(slika, 'slika.pdf')# 3. Naloga# program vrne nxn matriko kjer je vsak element v i-ti vrstici in j-tem stolpcu i + j - 1matrika = narascajoca(4)# 4. Naloga# ustvarimo matrikoA = Matrika(5);# Funkcija pove, ali je v matriki na i, j mestu sedloAliJe = ali_je_sedlo(A, 2, 3)# uporabimo funkciji stevilo_sedel in stevilo_sedel2. Èas izvajanja obeh funkcij primerjamotic; stevilo_sedel(A); cas1 = toc;tic; stevilo_sedel2(A); cas2 = toc;# if stavek vrne cas, kateri je hitrešji, èe sta si èasa enaka, vrne "Enako!"if cas1 > cas2  cas2elseif cas1 < cas2  cas1else  disp('Enaka!')end# 5. Naloga# podano vrednost (phi) prikažemo v tabeli rotacijart = rotacija(1)